<?phpnamespace Database\Seeders;use App\Models\PayPeriod;use App\Models\Person;use App\Models\Position;use App\Models\SawingStation;use App\Models\SortingRotation;use Carbon\Carbon;use Illuminate\Database\Seeder;// use Illuminate\Database\Console\Seeds\WithoutModelEvents;class DatabaseSeeder extends Seeder{    /**     * Seed the application's database.     */    public function run(): void    {        Person::query()->create([            'name' => 'أدمن',            'tr_name' => 'Admin',            'phone' => '1234567890',        ])->user()->create([            'username' => 'admin',            'password' => bcrypt('123'),            'role' => 'admin',        ]);        tap(Person::query()->create([            'current_position_id' => 2,            'name' => 'زقار شعبان',            'tr_name' => 'zougare chaaban',            'phone' => '1234567890',        ]), fn($person) => [            $person->user()->create([                'username' => 'zou',                'password' => bcrypt('123'),                'role' => 'user',            ]),            $person->positions()->attach(2, [                'start_date' => '2025-05-15',                'payment_type' => 'variable_salary',            ]),        ]);        tap(Person::query()->create([            'current_position_id' => 2,            'name' => 'عبد الصمد',            'tr_name' => 'Abd Samad',            'phone' => '',        ]), fn($person) => [            $person->user()->create([                'username' => 'abd',                'password' => bcrypt('123'),                'role' => 'user',            ]),            $person->positions()->attach(2, [                'start_date' => '2025-05-15',                'payment_type' => 'variable_salary',            ]),        ]);        Person::query()->create([            'current_position_id' => 2,            'name' => 'بارش علي',            'tr_name' => 'barech ali',            'phone' => '1234567890',        ])->positions()->attach(2, [            'start_date' => '2025-05-15',            'payment_type' => 'variable_salary',        ]);        Person::query()->create([            'current_position_id' => 2,            'name' => 'قشي مراد',            'tr_name' => 'kecchi mourad',            'phone' => '0551010101',        ])->positions()->attach(2, [            'start_date' => '2025-05-20',            'payment_type' => 'fixed_salary',            'salary' => 4200,        ]);        Person::query()->create([            'current_position_id' => 2,            'name' => 'زيتوني نذير',            'tr_name' => 'zitouni nadir',            'phone' => '0552020202',        ])->positions()->attach(2, [            'start_date' => '2025-05-21',            'payment_type' => 'variable_salary',        ]);        Person::query()->create([            'current_position_id' => 2,            'name' => 'بلقاسم عبد الحق',            'tr_name' => 'belkacem abdelhak',            'phone' => '0553030303',        ])->positions()->attach(2, [            'start_date' => '2025-05-22',            'payment_type' => 'fixed_salary',            'salary' => 3900,        ]);        Person::query()->create([            'current_position_id' => 2,            'name' => 'بوعلام كمال',            'tr_name' => 'boualem kamel',            'phone' => '0554040404',        ])->positions()->attach(2, [            'start_date' => '2025-05-23',            'payment_type' => 'objective',            'salary' => 3500,        ]);        Person::query()->create([            'current_position_id' => 2,            'name' => 'شيباني رابح',            'tr_name' => 'chebani rabah',            'phone' => '0555050505',        ])->positions()->attach(2, [            'start_date' => '2025-05-24',            'payment_type' => 'fixed_salary',            'salary' => 4300,        ]);        Person::query()->create([            'current_position_id' => 2,            'name' => 'سخري زهير',            'tr_name' => 'sekhri zouheir',            'phone' => '0556060606',        ])->positions()->attach(2, [            'start_date' => '2025-05-25',            'payment_type' => 'variable_salary',        ]);        Person::query()->create([            'current_position_id' => 2,            'name' => 'معوش سامي',            'tr_name' => 'maouch sami',            'phone' => '0557070707',        ])->positions()->attach(2, [            'start_date' => '2025-05-26',            'payment_type' => 'fixed_salary',            'salary' => 4000,        ]);        Person::query()->create([            'current_position_id' => 2,            'name' => 'بوسماحة وليد',            'tr_name' => 'bousmaha walid',            'phone' => '0558080808',        ])->positions()->attach(2, [            'start_date' => '2025-05-27',            'payment_type' => 'objective',            'salary' => 3700,        ]);        $payPeriod = PayPeriod::query()->create([            'start_date' => '2025-05-15',            'end_date' => '2025-05-31',            'is_active' => true,            'white_sorting_price' => 5,            'yellow_sorting_price' => 5,            'trimming_price' => 15,            'yellow_sawing_price' => 7,            'white_sawing_price' => 7,            'yellow_sorting_and_sawing_price' => 10,            'white_sorting_and_sawing_price' => 10,        ]);        $startDate = Carbon::create(2025, 5, 15);        for ($i = 0; $i < 1; $i++) {            $date = $startDate->copy()->addDays($i)->toDateString();            $payPeriod->sawingMissions()->create([                'assigned_user_id' => 2,                'date' => $date,                'start_time' => '08:00',                'end_time' => '17:00',                'is_started' => false,                'is_finished' => false,            ]);        }        SawingStation::query()->insert([            ['name' => 'منشار 1',],            ['name' => 'منشار 2',],        ]);        $startDate = Carbon::create(2025, 5, 15);        for ($i = 0; $i < 2; $i++) {            $date = $startDate->copy()->addDays($i)->toDateString();            $payPeriod->sortingMissions()->create([                'assigned_user_id' => 3,                'date' => $date,                'start_time' => '08:00',                'end_time' => '17:00',                'status' => $i == 0 ? 'finished' : 'new',            ]);        }        $woman1 = Person::query()->create([            'current_position_id' => 2,            'name' => 'كواشي نادية',            'tr_name' => 'Kaouachi Nadia',            'phone' => '0505050555',        ]);        $woman1->positions()->attach(2, [            'start_date' => '2025-05-27',            'payment_type' => 'objective',        ]);        $woman2 = Person::query()->create([            'current_position_id' => 2,            'name' => 'زبيش نجاة',            'tr_name' => 'Zebich Nadjat',            'phone' => '0666666666',        ]);        $woman2->positions()->attach(2, [            'start_date' => '2025-05-27',            'payment_type' => 'objective',        ]);        SortingRotation::query()->insert([            [                'sorting_mission_id' => 1,                'person_id' => $woman1->id,                'type' => 'yellow_sorting',                'amount' => 78.60,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman1->id,                'type' => 'yellow_sorting',                'amount' => 47.10,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman1->id,                'type' => 'yellow_sorting',                'amount' => 53.90,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman1->id,                'type' => 'yellow_sorting',                'amount' => 88.50,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman1->id,                'type' => 'white_sorting',                'amount' => 10.70,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman1->id,                'type' => 'white_sorting',                'amount' => 29.30,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman1->id,                'type' => 'trimming',                'amount' => 11.20,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman1->id,                'type' => 'trimming',                'amount' => 14.70,            ],        ]);        SortingRotation::query()->insert([            [                'sorting_mission_id' => 1,                'person_id' => $woman2->id,                'type' => 'yellow_sorting',                'amount' => 59.10,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman2->id,                'type' => 'yellow_sorting',                'amount' => 42.80,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman2->id,                'type' => 'yellow_sorting',                'amount' => 98.00,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman2->id,                'type' => 'white_sorting',                'amount' => 20.10,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman2->id,                'type' => 'white_sorting',                'amount' => 10.70,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman2->id,                'type' => 'white_sorting',                'amount' => 19.80,            ],            [                'sorting_mission_id' => 1,                'person_id' => $woman2->id,                'type' => 'white_sorting',                'amount' => 30.30,            ]        ]);        $payPeriod->sortingMissions()->create([            'assigned_user_id' => 2,            'date' => $date,            'start_time' => '08:00',            'end_time' => '17:00',            'status' => 'new',        ]);    }}